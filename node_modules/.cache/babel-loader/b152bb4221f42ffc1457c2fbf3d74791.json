{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Workspace\\\\flask-api\\\\jmeet-app\\\\src\\\\components\\\\wizard\\\\SignUpWizard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport PersonalInfo from \"./PersonalInfo\";\nimport ValidationCode from \"./ValidationCode\";\n\nconst SignUpWizard = () => {\n  _s();\n\n  const [activeStep, setActiveStep] = useState(0);\n  const [errors, setErrors] = useState({});\n  const [signupData, setSignupData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    email: \"\",\n    terms: false,\n    updates: false,\n    validationCode: \"\"\n  });\n  const steps = [\"Personal Info\", \"Validation Code\", \"Education Info\"];\n\n  const validateEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const isFormValid = () => {\n    const formErrors = {};\n    if (!signupData.firstName) formErrors.firstName = \"Please enter first-name\";\n    if (!signupData.lastName) formErrors.lastName = \"Please enter last-name\";\n\n    if (!signupData.email) {\n      formErrors.email = \"Please enter an email address\";\n    } else {\n      if (!validateEmail(signupData.email)) formErrors.email = \"Please enter a valid email address (example: name@domain.com)\";\n    }\n\n    if (!signupData.password) formErrors.password = \"Please enter a password\";\n    if (!signupData.confirmPassword) formErrors.confirmPassword = \"You must confirm the password in order to proceed\";\n    if (signupData.password !== signupData.confirmPassword) formErrors.confirmPassword = \"The passwords are not match\";\n    if (!signupData.terms) formErrors.terms = true;\n    if (!signupData.updates) formErrors.updates = true;\n    setErrors(formErrors);\n    return Object.keys(formErrors).length === 0;\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (!isFormValid()) return;\n\n    if (activeStep === steps.length - 1) {\n      alert(\"Form Submitted\");\n    } else {\n      setActiveStep(prevState => prevState + 1);\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      checked\n    } = e.target;\n    setSignupData(prevState => ({ ...prevState,\n      [name]: checked ? checked : value\n    }));\n\n    if (value) {\n      if (Object.keys(errors).find(a => a === name)) {\n        setErrors(prevState => ({ ...prevState,\n          [name]: undefined\n        }));\n      }\n    }\n  };\n\n  const showActiveStep = () => {\n    switch (activeStep) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(PersonalInfo, {\n          firstName: signupData.firstName,\n          lastName: signupData.lastName,\n          email: signupData.email,\n          password: signupData.password,\n          confirmPassword: signupData.confirmPassword,\n          terms: signupData.terms,\n          updates: signupData.updates,\n          onInputChanged: handleInputChange,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(ValidationCode, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"To do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }, this);\n\n      default:\n        throw Error(\"Unknown step\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"content\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: steps[activeStep]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), showActiveStep(), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        disabled: activeStep === 0,\n        onClick: () => setActiveStep(prevState => prevState - 1),\n        children: \"< Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: activeStep === steps.length - 1 ? \"Submit\" : \"Next >\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpWizard, \"corEo8d3a1kgvE1l36gyItfy8cM=\");\n\n_c = SignUpWizard;\nexport default SignUpWizard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpWizard\");","map":{"version":3,"sources":["C:/Workspace/flask-api/jmeet-app/src/components/wizard/SignUpWizard.js"],"names":["useState","Form","Button","PersonalInfo","ValidationCode","SignUpWizard","activeStep","setActiveStep","errors","setErrors","signupData","setSignupData","firstName","lastName","password","confirmPassword","email","terms","updates","validationCode","steps","validateEmail","re","test","String","toLowerCase","isFormValid","formErrors","Object","keys","length","handleFormSubmit","e","preventDefault","alert","prevState","handleInputChange","name","value","checked","target","find","a","undefined","showActiveStep","Error"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport PersonalInfo from \"./PersonalInfo\";\r\nimport ValidationCode from \"./ValidationCode\";\r\n\r\nconst SignUpWizard = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [errors, setErrors] = useState({});\r\n  const [signupData, setSignupData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    email: \"\",\r\n    terms: false,\r\n    updates: false,\r\n    validationCode: \"\",\r\n  });\r\n\r\n  const steps = [\"Personal Info\", \"Validation Code\", \"Education Info\"];\r\n\r\n  const validateEmail = (email) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    const formErrors = {};\r\n    if (!signupData.firstName) formErrors.firstName = \"Please enter first-name\";\r\n    if (!signupData.lastName) formErrors.lastName = \"Please enter last-name\";\r\n    if (!signupData.email) {\r\n      formErrors.email = \"Please enter an email address\";\r\n    } else {\r\n      if (!validateEmail(signupData.email))\r\n        formErrors.email =\r\n          \"Please enter a valid email address (example: name@domain.com)\";\r\n    }\r\n    if (!signupData.password) formErrors.password = \"Please enter a password\";\r\n    if (!signupData.confirmPassword)\r\n      formErrors.confirmPassword =\r\n        \"You must confirm the password in order to proceed\";\r\n    if (signupData.password !== signupData.confirmPassword)\r\n      formErrors.confirmPassword = \"The passwords are not match\";\r\n    if (!signupData.terms) formErrors.terms = true;\r\n    if (!signupData.updates) formErrors.updates = true;\r\n\r\n    setErrors(formErrors);\r\n    return Object.keys(formErrors).length === 0;\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isFormValid()) return;\r\n\r\n    if (activeStep === steps.length - 1) {\r\n      alert(\"Form Submitted\");\r\n    } else {\r\n      setActiveStep((prevState) => prevState + 1);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, checked } = e.target;\r\n    setSignupData((prevState) => ({\r\n      ...prevState,\r\n      [name]: checked ? checked : value,\r\n    }));\r\n\r\n    if (value) {\r\n      if (Object.keys(errors).find((a) => a === name)) {\r\n        setErrors((prevState) => ({ ...prevState, [name]: undefined }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const showActiveStep = () => {\r\n    switch (activeStep) {\r\n      case 0:\r\n        return (\r\n          <PersonalInfo\r\n            firstName={signupData.firstName}\r\n            lastName={signupData.lastName}\r\n            email={signupData.email}\r\n            password={signupData.password}\r\n            confirmPassword={signupData.confirmPassword}\r\n            terms={signupData.terms}\r\n            updates={signupData.updates}\r\n            onInputChanged={handleInputChange}\r\n            errors={errors}\r\n          />\r\n        );\r\n      case 1:\r\n        return <ValidationCode />;\r\n      case 2:\r\n        return <div>To do</div>;\r\n      default:\r\n        throw Error(\"Unknown step\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Form className=\"content\" onSubmit={handleFormSubmit}>\r\n        <h2>{steps[activeStep]}</h2>\r\n        {showActiveStep()}\r\n\r\n        <Button\r\n          variant=\"primary\"\r\n          disabled={activeStep === 0}\r\n          onClick={() => setActiveStep((prevState) => prevState - 1)}\r\n        >\r\n          {\"< Back\"}\r\n        </Button>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          {activeStep === steps.length - 1 ? \"Submit\" : \"Next >\"}\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpWizard;\r\n"]},"metadata":{},"sourceType":"module"}