{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Workspace\\\\flask-api\\\\jmeet-app\\\\src\\\\components\\\\wizard\\\\PersonalInfo.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, FormLabel, Row, Col } from \"react-bootstrap\";\n\nconst PersonalInfo = ({\n  firstName,\n  lastName,\n  password,\n  confirmPassword,\n  email,\n  terms,\n  updates,\n  onInputChanged\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"Please fill your first name\",\n          value: firstName,\n          onChange: onInputChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Please fill your last name\",\n          value: lastName,\n          onChange: onInputChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Please fill your Email\",\n      value: email,\n      onChange: onInputChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Please choose password\",\n      value: password,\n      onChange: onInputChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Confirm Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: \"Please enter your password again\",\n      value: confirmPassword,\n      onChange: onInputChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        name: \"terms\",\n        label: \"I Agree to terms & services\",\n        checked: terms,\n        onChange: onInputChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        name: \"updates\",\n        label: \"I Agree to recieve Emails containing updates and news about my account\",\n        checked: updates,\n        onChange: e => console.log(e.target)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = PersonalInfo;\nPersonalInfo.propTypes = {\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  confirmPassword: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  terms: PropTypes.bool.isRequired,\n  updates: PropTypes.bool.isRequired,\n  onInputChanged: PropTypes.func.isRequired\n};\nexport default PersonalInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalInfo\");","map":{"version":3,"sources":["C:/Workspace/flask-api/jmeet-app/src/components/wizard/PersonalInfo.js"],"names":["React","PropTypes","Form","FormLabel","Row","Col","PersonalInfo","firstName","lastName","password","confirmPassword","email","terms","updates","onInputChanged","e","console","log","target","propTypes","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, FormLabel, Row, Col } from \"react-bootstrap\";\r\n\r\nconst PersonalInfo = ({\r\n  firstName,\r\n  lastName,\r\n  password,\r\n  confirmPassword,\r\n  email,\r\n  terms,\r\n  updates,\r\n  onInputChanged,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <FormLabel>First Name</FormLabel>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            placeholder=\"Please fill your first name\"\r\n            value={firstName}\r\n            onChange={onInputChanged}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <FormLabel>Last Name</FormLabel>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            placeholder=\"Please fill your last name\"\r\n            value={lastName}\r\n            onChange={onInputChanged}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <FormLabel>Email Address</FormLabel>\r\n      <Form.Control\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Please fill your Email\"\r\n        value={email}\r\n        onChange={onInputChanged}\r\n      />\r\n      <FormLabel>Password</FormLabel>\r\n      <Form.Control\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Please choose password\"\r\n        value={password}\r\n        onChange={onInputChanged}\r\n      />\r\n      <FormLabel>Confirm Password</FormLabel>\r\n      <Form.Control\r\n        type=\"password\"\r\n        name=\"confirmPassword\"\r\n        placeholder=\"Please enter your password again\"\r\n        value={confirmPassword}\r\n        onChange={onInputChanged}\r\n      />\r\n      <Form.Group>\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          name=\"terms\"\r\n          label=\"I Agree to terms & services\"\r\n          checked={terms}\r\n          onChange={onInputChanged}\r\n        />\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          name=\"updates\"\r\n          label=\"I Agree to recieve Emails containing updates and news about my account\"\r\n          checked={updates}\r\n          onChange={(e) => console.log(e.target)}\r\n        />\r\n      </Form.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nPersonalInfo.propTypes = {\r\n  firstName: PropTypes.string.isRequired,\r\n  lastName: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired,\r\n  confirmPassword: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  terms: PropTypes.bool.isRequired,\r\n  updates: PropTypes.bool.isRequired,\r\n  onInputChanged: PropTypes.func.isRequired,\r\n};\r\nexport default PersonalInfo;\r\n"]},"metadata":{},"sourceType":"module"}