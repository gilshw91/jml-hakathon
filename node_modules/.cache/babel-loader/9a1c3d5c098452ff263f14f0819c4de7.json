{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Workspace\\\\flask-api\\\\jmeet-app\\\\src\\\\components\\\\wizard\\\\SignUpWizard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport PersonalInfo from \"./PersonalInfo\";\nimport ValidationCode from \"./ValidationCode\";\n\nconst SignUpWizard = () => {\n  _s();\n\n  const [activeStep, setActiveStep] = useState(0);\n  const [errors, setErrors] = useState({});\n  const [signupData, setSignupData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    email: \"\",\n    terms: false,\n    updates: true,\n    validationCode: \"\"\n  });\n  const steps = [\"Personal Info\", \"Validation Code\", \"Education Info\"];\n\n  const isFormValid = () => {\n    const formErrors = {};\n    return false;\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (!isFormValid()) return;\n\n    if (activeStep === steps.length - 1) {\n      alert(\"Form Submitted\");\n    } else {\n      setActiveStep(prevState => prevState + 1);\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignupData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const showActiveStep = () => {\n    switch (activeStep) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(PersonalInfo, {\n          firstName: signupData.firstName,\n          lastName: signupData.lastName,\n          email: signupData.email,\n          password: signupData.password,\n          confirmPassword: signupData.confirmPassword,\n          terms: signupData.terms,\n          updates: signupData.updates,\n          onInputChanged: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(ValidationCode, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"To do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }, this);\n\n      default:\n        throw Error(\"Unknown step\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"content\",\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: steps[activeStep]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), showActiveStep(), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      disabled: activeStep === 0,\n      onClick: () => setActiveStep(prevState => prevState - 1),\n      children: \"< Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: activeStep === steps.length - 1 ? \"Submit\" : \"Next >\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpWizard, \"p6tRUw+iWMpxyVBBf+pX2FPv664=\");\n\n_c = SignUpWizard;\nexport default SignUpWizard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpWizard\");","map":{"version":3,"sources":["C:/Workspace/flask-api/jmeet-app/src/components/wizard/SignUpWizard.js"],"names":["useState","Form","Button","PersonalInfo","ValidationCode","SignUpWizard","activeStep","setActiveStep","errors","setErrors","signupData","setSignupData","firstName","lastName","password","confirmPassword","email","terms","updates","validationCode","steps","isFormValid","formErrors","handleFormSubmit","e","preventDefault","length","alert","prevState","handleInputChange","name","value","target","showActiveStep","Error"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport PersonalInfo from \"./PersonalInfo\";\r\nimport ValidationCode from \"./ValidationCode\";\r\n\r\nconst SignUpWizard = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [errors, setErrors] = useState({});\r\n  const [signupData, setSignupData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    email: \"\",\r\n    terms: false,\r\n    updates: true,\r\n    validationCode: \"\",\r\n  });\r\n\r\n  const steps = [\"Personal Info\", \"Validation Code\", \"Education Info\"];\r\n\r\n  const isFormValid = () => {\r\n    const formErrors = {};\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isFormValid()) return;\r\n\r\n    if (activeStep === steps.length - 1) {\r\n      alert(\"Form Submitted\");\r\n    } else {\r\n      setActiveStep((prevState) => prevState + 1);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSignupData((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const showActiveStep = () => {\r\n    switch (activeStep) {\r\n      case 0:\r\n        return (\r\n          <PersonalInfo\r\n            firstName={signupData.firstName}\r\n            lastName={signupData.lastName}\r\n            email={signupData.email}\r\n            password={signupData.password}\r\n            confirmPassword={signupData.confirmPassword}\r\n            terms={signupData.terms}\r\n            updates={signupData.updates}\r\n            onInputChanged={handleInputChange}\r\n          />\r\n        );\r\n      case 1:\r\n        return <ValidationCode />;\r\n      case 2:\r\n        return <div>To do</div>;\r\n      default:\r\n        throw Error(\"Unknown step\");\r\n    }\r\n  };\r\n  return (\r\n    <Form className=\"content\" onSubmit={handleFormSubmit}>\r\n      <h2>{steps[activeStep]}</h2>\r\n      {showActiveStep()}\r\n\r\n      <Button\r\n        variant=\"primary\"\r\n        disabled={activeStep === 0}\r\n        onClick={() => setActiveStep((prevState) => prevState - 1)}\r\n      >\r\n        {\"< Back\"}\r\n      </Button>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        {activeStep === steps.length - 1 ? \"Submit\" : \"Next >\"}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SignUpWizard;\r\n"]},"metadata":{},"sourceType":"module"}